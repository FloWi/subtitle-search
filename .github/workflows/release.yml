# https://docs.github.com/en/actions

name: "Build and Release"

on: # yamllint disable-line rule:truthy
  push:
    branches: [ main ]
    tags: [ "**" ]
  pull_request:
    branches: [ main ]
#  push:
#    tags:
#      - "**"

jobs:

  build:
    strategy:
      matrix:
        scalaVersion: [ "2.13.8" ]
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v13

      - name: Build
        run: ./build-prod.sh


  debugfoo:
    needs: [build]
    runs-on: ubuntu-20.04

    steps:

      - name: event_name
        id: event_name
        run: echo ${{github.event_name}}

      - name: ref
        id: ref
        run: echo ${{github.ref}}


  release-docker:
    needs: [build]
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the version
        id: version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Get image repository
        id: image_repository
        run: echo ::set-output name=IMAGE_REPOSITORY::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./docker-dist
          platforms: linux/amd64
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          tags: ghcr.io/${{ steps.image_repository.outputs.IMAGE_REPOSITORY }}:${{ steps.version.outputs.VERSION }}, ghcr.io/${{ steps.image_repository.outputs.IMAGE_REPOSITORY }}:latest

  release-webapp:
    needs: [build]
    runs-on: ubuntu-20.04

    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            webapp/target/scala-2.13/scalajs-bundler/main/dist/*
            file-server/target/scala-2.13/quickstart-assembly-0.0.1-SNAPSHOT.jar

